{"version":3,"file":"7185.41173eb0b7b0c14e.js","mappings":"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","sources":["./libs/welcome/src/index.ts","./libs/welcome/src/lib/components/background/background.component.ts","./libs/welcome/src/lib/components/background/background.component.html","./libs/welcome/src/lib/components/current-time/current-time.component.html","./libs/welcome/src/lib/components/current-time/current-time.component.ts","./libs/welcome/src/lib/containers/welcome-page/welcome-page.component.ts","./libs/welcome/src/lib/containers/welcome-page/welcome-page.component.html","./libs/welcome/src/lib/lib.routes.ts","./libs/welcome/src/lib/welcome.module.ts"],"sourcesContent":["export * from './lib/welcome.module';\n\nexport * from './lib/lib.routes';\n","import { Component, ElementRef, Input, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'hexa-background',\n  templateUrl: './background.component.html',\n  styleUrls: ['./background.component.scss']\n})\nexport class BackgroundComponent implements OnInit, OnChanges {\n\n  @Input() clientId: string|undefined;\n  @Input() isDevMode: boolean|undefined;\n  @Input() query: string|undefined = undefined;\n  @Input() url: string|undefined = undefined;\n  imgUrl: string|undefined;\n\n  constructor(\n    private el: ElementRef,\n    private readonly _renderer: Renderer2  \n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.imgUrl = (Boolean(this.url) === true) \n      ? this.url\n      : await this.getBackgroundImageFromUnsplashAPI()\n        .catch(error => {\n          this.fadeIn();\n          return undefined;\n        });\n    if (this.imgUrl) {\n      this.el.nativeElement.style.backgroundImage = `url(${this.imgUrl})`;\n    } \n    this.fadeIn();\n  }\n\n  async ngOnChanges(simpleChanges: SimpleChanges): Promise<void> {\n    if (simpleChanges?.['query']?.firstChange) {\n      return;\n    }\n    this._renderer.setStyle(\n      this.el.nativeElement, \n      'opacity', \n      0\n    );\n    this.ngOnInit();\n  }\n\n  async getBackgroundImageFromUnsplashAPI(): Promise<string|undefined> {\n    // check if client id is provided\n    if (!this.clientId) {\n      return undefined;\n    }\n    if (this.isDevMode){\n      return `https://images.unsplash.com/photo-1506034861661-ad49bbcf7198?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjEyfDB8MXxyYW5kb218fHx8fHx8fHwxNjcwODI5OTYx&ixlib=rb-4.0.3&q=80&w=1080`;\n    }\n    const query = this.query !== undefined && this.query.length > 0 ? '&query=' + this.query : '';\n    const json = await fetch(`https://api.unsplash.com/photos/random?client_id=${this.clientId}${query}`)\n      .then(response => response.json())\n      .catch(error => {\n        console.log(error);\n        throw new Error('api not available');\n      });\n    return json?.urls?.regular;\n  }\n\n  fadeIn() {\n    let opacity = 0;\n    const int = setInterval(async () => {\n      opacity += 0.01;\n      this._renderer.setStyle(\n        this.el.nativeElement, \n        'opacity', \n        opacity\n      );\n      if (opacity >= 1) {\n        clearInterval(int);\n      }\n    }, 3);\n  }\n}","<div \n  class=\"bgContainer\"\n  [style.backgroundImage]=\"(imgUrl?.length||0 )? 'url('+ imgUrl +')' : null\">\n  <ng-content></ng-content>\n</div>","<time *ngIf=\"currentDate;else displayError\">\n  {{currentDate.toLocaleTimeString().slice(0, 5).split(':')[0]}}<span>:</span>{{currentDate.toLocaleTimeString().slice(0, 5).split(':')[1]}}\n</time>\n<span *ngIf=\"cityname\">{{cityname}}</span>\n<ng-template #displayError>\n  <p>{{errorMessage}}</p>\n</ng-template>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hexa-current-time',\n  templateUrl: './current-time.component.html',\n  styleUrls: ['./current-time.component.scss']\n})\nexport class CurrentTimeComponent implements OnInit {\n\n  currentDate!: Date;\n  errorMessage!: string;\n  private dt!: number;\n  @Input() cityname!: string;\n\n  async ngOnInit() {\n    if (!this.cityname || this.cityname === '') {\n      this.currentDate = new Date();\n      setInterval(() => {\n        this.currentDate = new Date();\n      }, 1000);\n    } else {\n      await this._getTimeFromLocation();\n      if (!this.dt) {\n        return;\n      }\n      this.currentDate = new Date(this.dt);\n      setInterval(() => {\n        this.dt += 1000;\n        this.currentDate = new Date(this.dt);\n      } , 1000);\n    }\n  }\n\n  private async _getTimeFromLocation() {\n    if (!this.cityname || this.cityname === '') {\n      this.errorMessage = 'City name not provided';\n      return;\n    }\n    const data = await import('city-timezones')\n      .then((m) => {\n        const res = m.lookupViaCity(this.cityname).shift();\n        return res;\n      })\n      .catch((err) => {\n        this.errorMessage = err.message;\n      });\n    if (!data) {\n      this.errorMessage = 'City not available';\n      return;\n    }\n    const timeZone = data?.timezone;\n    const time = new Date().toLocaleString('en-US', {timeZone});\n    this.dt = new Date(time).getTime();\n  }\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { IDatastoreService, ILoadingService } from '@hexa/interfaces';\nimport { getInjectionToken, TOKENS_NAME } from '@hexa/token-injection';\nimport { AlertController, AlertInput, ModalController, PopoverController } from '@ionic/angular';\nimport { BehaviorSubject, distinctUntilChanged } from 'rxjs';\nimport { DIDDataStore } from '@glazed/did-datastore';\n\nconst ROOT_DB_COLLECTION = 'd-welcome';\nconst DEFAULT_WIDGETS_CONFIG = {\n  background: {\n    unsplashClientId: null,\n    query: null,\n    url: null,\n  },\n};\nconst WIDGETS_MESSAGE = {\n  background: `You can provide a Unsplash client ID to get a random image from Unsplash API. If you don't have a Unsplash client ID, you can get it from https://unsplash.com/developers or leave it empty and use the URL address of the image.`,\n}\nconst WIDGETS_INPUTS_OPTIONS = {\n  background: (background: {\n    unsplashClientId?: string;\n    query?: string;\n    url?: string;\n  }) => [\n    {\n      name: 'unsplashClientId',\n      type: 'text',\n      placeholder: 'Unsplash Client ID',\n      value: background?.unsplashClientId,\n    },\n    {\n      name: 'query',\n      type: 'text',\n      placeholder: 'Unsplash query to search images',\n      value: background?.query,\n    },\n    {\n      name: 'url',\n      type: 'text',\n      placeholder: 'URL address of the image',\n      value: background?.url,\n    }\n  ]\n}\n\n@Component({\n  selector: 'hexa-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss'],\n})\nexport class WelcomePageComponent  implements OnInit {\n  text = 'Welcome';\n  private readonly _config$: BehaviorSubject<any> = new BehaviorSubject(null as any);\n  public readonly config$ = this._config$.asObservable().pipe(distinctUntilChanged(\n    (prev, next) => JSON.stringify(prev) === JSON.stringify(next)\n  ));\n  constructor(\n    private readonly _modal: ModalController,\n    private readonly _alertCtrl: AlertController,\n    private readonly _popoverCtrl: PopoverController,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_IS_PROD)) public readonly isProd: boolean,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_DATASTORE_SERVICE)) private readonly _datastoreService: IDatastoreService<DIDDataStore>,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_LOADER_SERVICE)) private readonly _loaderService: ILoadingService,\n  ) {}\n\n  async ngOnInit() {\n    if (this._config$.value) {\n      return;\n    }\n    // get config from db\n    const {background} = await this._datastoreService.getData(\n      ROOT_DB_COLLECTION,\n      ['widgetsConfig'],\n      DEFAULT_WIDGETS_CONFIG,\n    );\n    // update app state\n    this._config$.next({\n      background,\n    });\n  }\n\n  ionViewWillEnter() {\n    this._sayHello();\n  }\n  \n  async actions(type: string, payload?: any) {\n    switch(true) {\n      case (type === 'open-settings-modal'): {\n        // close existing popover\n        const popover = await this._popoverCtrl.getTop();\n        if (popover) {\n          await popover.dismiss();\n        }\n        // prompt settings modal\n        const settings = await this._openAlertSettings(payload);\n        // save settings to db\n        if (settings) {\n          this.actions('saveConfig', {\n            [payload]: settings,\n          });\n        }\n        break;\n      }\n      case (type === 'saveConfig'): {\n        this._loaderService.setStatus(true);\n        const data = {\n          ...this._config$.value,\n          ...payload,\n        };\n        // update app state \n        this._config$.next(data);\n        // save config to db\n        await this._datastoreService.saveData(data, ROOT_DB_COLLECTION, ['widgetsConfig']);\n        this._loaderService.setStatus(false);\n        // TODO: display notification\n        break;\n      }\n    }\n  }\n\n  private _sayHello(): void {\n    const currentDate = new Date();\n    switch (true) {\n      case (currentDate.getHours() < 5):\n        this.text = 'Good night';\n        break;\n      case (currentDate.getHours() < 12):\n        this.text = 'Good morning';\n        break;\n      case (currentDate.getHours() < 18):\n        this.text = 'Good afternoon';\n        break;\n      case (currentDate.getHours() < 24):\n        this.text = 'Good evening';\n        break;    \n      default:\n        break;\n    }\n  }\n\n  private async _openAlertSettings(widgetType: 'background') {\n    const inputs = WIDGETS_INPUTS_OPTIONS[widgetType](this._config$.value[widgetType]) as AlertInput[];\n    if (!inputs) {\n      return;\n    }\n    // create header title capitalized\n    const header = `${widgetType[0].toUpperCase()}${widgetType.slice(1)} Settings`;\n    const message = WIDGETS_MESSAGE[widgetType];\n    const alert = await this._alertCtrl.create({\n      header,\n      message,\n      inputs,\n      buttons: [\n        { text: 'Cancel', role: 'cancel', cssClass: 'secondary' }, \n        { text: 'Ok' }\n      ]\n    });\n    await alert.present();\n    const {data, role} = await alert.onDidDismiss();\n    if (role === 'cancel' || role === 'backdrop') {\n      return;\n    }\n    const {values = null} = data;\n    return values;\n  }\n}","<ion-content\n  fullscreen=\"true\"\n  class=\"ion-padding-horizontal\"\n  *ngIf=\"config$ | async as config\"\n  class=\"ion-no-padding\"\n>\n  <ion-grid class=\"header ion-no-padding ion-padding-horizontal\">\n    <ion-row class=\"ion-no-padding ion-align-items-center\">\n      <ion-col size=\"auto\">\n        <ion-menu-button></ion-menu-button>\n      </ion-col>\n      <!-- <ion-col size=\"auto\">\n        <ion-button id=\"add-btn\" fill=\"clear\" size=\"large\">\n          <ion-icon size=\"small\" name=\"add-sharp\"></ion-icon>\n        </ion-button>\n        <ion-popover trigger=\"add-btn\" triggerAction=\"click\">\n          <ng-template>\n            <ion-content class=\"ion-no-padding\">\n              <ion-list lines=\"none\" class=\"ion-margin-bottom\">\n                <ion-list-header>\n                  <ion-label>Add Widgets</ion-label>\n                </ion-list-header>\n                <ion-item\n                  button\n                  (click)=\"actions('add-widget', 'current-time')\"\n                >\n                  <ion-label>\n                    <h3>Current Time</h3>\n                    <p>\n                      Display specific location time\n                    </p>\n                  </ion-label>\n                </ion-item>\n              </ion-list>\n            </ion-content>\n          </ng-template>\n        </ion-popover>\n      </ion-col> -->\n      <ion-col class=\"ion-text-end\">\n        <ion-button id=\"settings-btn\" fill=\"clear\" size=\"large\">\n          <ion-icon size=\"small\" name=\"ellipsis-vertical-sharp\"></ion-icon>\n        </ion-button>\n        <ion-popover trigger=\"settings-btn\" triggerAction=\"click\">\n          <ng-template>\n            <ion-content class=\"ion-no-padding\">\n              <ion-list lines=\"none\" class=\"ion-margin-bottom\">\n                <ion-list-header>\n                  <ion-label>Widgets Settings</ion-label>\n                </ion-list-header>\n                <ion-item\n                  button\n                  (click)=\"actions('open-settings-modal', 'background')\"\n                >\n                  <ion-label>\n                    <h3>Background</h3>\n                    <p>\n                      Change background image\n                    </p>\n                  </ion-label>\n                </ion-item>\n              </ion-list>\n            </ion-content>\n          </ng-template>\n        </ion-popover>\n      </ion-col>\n      <ion-col size=\"auto\">\n        <div style=\"width: 82px\"></div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <hexa-background\n    [clientId]=\"config?.background?.unsplashClientId\"\n    [query]=\"config?.background?.query\"\n    [url]=\"config?.background?.url\"\n    [isDevMode]=\"!isProd\"\n  >\n    <div id=\"flexContainer\">\n      <hexa-current-time></hexa-current-time>\n      <h1>{{ text }}!</h1>\n    </div>\n  </hexa-background>\n</ion-content>\n","import { Route } from '@angular/router';\nimport { WelcomePageComponent } from './containers/welcome-page/welcome-page.component';\n\nexport const welcomeRoutes: Route[] = [\n  {\n    path: '', \n    pathMatch: 'full', \n    component: WelcomePageComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { welcomeRoutes } from './lib.routes';\nimport { WelcomePageComponent } from './containers/welcome-page/welcome-page.component';\nimport { CurrentTimeComponent } from './components/current-time/current-time.component';\nimport { BackgroundComponent } from './components/background/background.component';\n\n@NgModule({\n  declarations: [\n    WelcomePageComponent,\n    CurrentTimeComponent,\n    BackgroundComponent\n  ],\n  imports: [\n    CommonModule, \n    IonicModule,\n    RouterModule.forChild(welcomeRoutes)\n  ],\n})\nexport class WelcomeModule {}\n"],"names":["ElementRef","Renderer2","SimpleChanges","BackgroundComponent","constructor","el","_renderer","undefined","ngOnInit","imgUrl","Boolean","url","getBackgroundImageFromUnsplashAPI","catch","error","fadeIn","nativeElement","style","backgroundImage","ngOnChanges","simpleChanges","firstChange","setStyle","clientId","isDevMode","query","length","json","fetch","then","response","console","log","Error","urls","regular","opacity","int","setInterval","clearInterval","selectors","inputs","features","ngContentSelectors","decls","vars","consts","template","i0","CurrentTimeComponent","cityname","currentDate","Date","_getTimeFromLocation","dt","errorMessage","data","m","res","lookupViaCity","shift","err","message","timeZone","timezone","time","toLocaleString","getTime","getInjectionToken","TOKENS_NAME","AlertController","ModalController","PopoverController","BehaviorSubject","distinctUntilChanged","ROOT_DB_COLLECTION","DEFAULT_WIDGETS_CONFIG","background","unsplashClientId","WIDGETS_MESSAGE","WIDGETS_INPUTS_OPTIONS","name","type","placeholder","value","WelcomePageComponent","_modal","_alertCtrl","_popoverCtrl","isProd","_datastoreService","_loaderService","_config$","asObservable","pipe","prev","next","JSON","stringify","getData","ionViewWillEnter","_sayHello","actions","payload","popover","getTop","dismiss","settings","_openAlertSettings","setStatus","saveData","getHours","text","widgetType","header","toUpperCase","slice","alert","create","buttons","role","cssClass","present","onDidDismiss","values","APP_IS_PROD","APP_DATASTORE_SERVICE","APP_LOADER_SERVICE","welcomeRoutes","path","pathMatch","component","CommonModule","RouterModule","IonicModule","WelcomeModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}