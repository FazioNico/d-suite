{"version":3,"file":"3945.210a760169cd8ff3.js","mappings":"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","sources":["./libs/wallet/src/index.ts","./libs/wallet/src/lib/components/items-container/items-container.component.ts","./libs/wallet/src/lib/components/items-container/items-container.component.html","./libs/wallet/src/lib/components/swap-assets-modal/swap-assets-modal.component.ts","./libs/wallet/src/lib/components/swap-assets-modal/swap-assets-modal.component.html","./libs/wallet/src/lib/containers/wallet-page/wallet-page.component.ts","./libs/wallet/src/lib/containers/wallet-page/wallet-page.component.html","./libs/wallet/src/lib/directives/avatar.directive.ts","./libs/wallet/src/lib/lib.routes.ts","./libs/wallet/src/lib/pipes/assets-type.pipe.ts","./libs/wallet/src/lib/pipes/diff-percent.pipe.ts","./libs/wallet/src/lib/pipes/net-worth.pipe.ts","./libs/wallet/src/lib/pipes/slice-address.pipe.ts","./libs/wallet/src/lib/services/wallet.service.ts","./libs/wallet/src/lib/wallet.module.ts"],"sourcesContent":["export * from './lib/wallet.module';\n\nexport * from './lib/lib.routes';\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { ModalController, PopoverController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\nimport { TokenInterface } from '../../interfaces/token.interface';\n\nconst MAX_ITEMS_TO_DISPLAY = 25;\n\n@Component({\n  selector: 'hexa-items-container',\n  templateUrl: './items-container.component.html',\n  styleUrls: ['./items-container.component.scss'],\n})\nexport class ItemsContainerComponent implements OnChanges {\n  @Input() public items!: TokenInterface[] | null;\n  public readonly maxItemToDisplay$ = new BehaviorSubject(MAX_ITEMS_TO_DISPLAY);\n  @Output() public readonly actionsEvent: EventEmitter<{\n    type: string;\n    payload: any;\n  }> = new EventEmitter();\n\n  constructor(\n    private readonly _popCtrl: PopoverController,\n    private readonly _modalCtrl: ModalController,\n    ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    // reset max item to display when items change\n    if (\n      changes['items'] &&\n      changes['items'].currentValue &&\n      this.maxItemToDisplay$.value !== MAX_ITEMS_TO_DISPLAY\n    ) {\n      this.maxItemToDisplay$.next(MAX_ITEMS_TO_DISPLAY);\n    }\n  }\n\n  async actions(type: string, payload?: any) {\n    switch (true) {\n      case type === 'preview': {\n        this._preview(payload.item);\n        break;\n      }\n      case type === 'openExternalLink': {\n        const popover = await this._popCtrl.getTop();\n        if (popover) await popover.dismiss();\n        const {item = undefined} = payload;\n        if (!item||!item.address) return;\n        window.open(`https://etherscan.io/token/${item.address}`, '_blank');\n      }\n    }\n    this.actionsEvent.emit({ type, payload });\n  }\n\n  async trackByfn(index: number, item: { _id: string }) {\n    return item._id;\n  }\n\n  private async _preview(item: TokenInterface) {\n    // const ionModal = await this._modalCtrl.create({\n    //   component: ItemPreviewComponent,\n    //   componentProps: {\n    //     item\n    //   },\n    //   cssClass: 'ion-modal-preview-file',\n    // });\n    // await ionModal.present();\n    // const { data, role = 'cancel' } = await ionModal.onDidDismiss();\n    // this.actions(role, { item: data });\n    console.log('preview', item);\n    \n  }\n\n}\n","<ion-grid class=\"ion-no-padding\">\n  <ion-row \n      *ngFor=\"\n        let item of (items||[]) | slice: 0:maxItemToDisplay$.value;let i = index;\n      \"\n      (click)=\"actions('preview', {item})\"\n      class=\"item ion-align-items-center\">\n    <ion-col\n        class=\"ion-align-items-center ion-text-wrap\"\n        size=\"4\"\n        [ngStyle]=\"{ display: 'flex' }\">\n      <ion-avatar class=\"thumbnail\">\n          <ion-img [src]=\"item.chainLogo\"></ion-img>\n        </ion-avatar>\n      <ion-avatar>\n        <ion-img [src]=\"item.logo\"></ion-img>\n      </ion-avatar>\n      <ion-label class=\"ion-padding-start\">\n        <ion-text>\n          <b>{{item.symbol|uppercase}}</b>\n        </ion-text>\n        <ion-text color=\"medium\">\n          <small>{{item.name}}</small>\n        </ion-text>\n      </ion-label>\n    </ion-col>\n    <ion-col class=\"ion-hide-md-down\">\n      <ion-text color=\"medium\">\n        ${{item.rate}}\n      </ion-text><br/>\n      <ion-text [color]=\"(item.rate|diffPercent: item.rate24h) < 0 ? 'danger' : 'success'\">\n        <small>\n          <span *ngIf=\"(item.rate|diffPercent: item.rate24h) >= 0\">+</span>{{item.rate|diffPercent: item.rate24h}}%\n        </small>\n      </ion-text>\n    </ion-col>    \n    <ion-col \n        class=\"ion-text-right ion-align-items-center ion-justify-content-end\"\n        [ngStyle]=\"{ display: 'flex' }\">\n        <ion-label>\n          <ion-text>\n            <b>${{ item.value }}</b><br/>\n          </ion-text>\n          <ion-text color=\"medium\">\n            <small>{{ item.balance }} {{item.symbol|uppercase}}</small>\n          </ion-text>\n      </ion-label>\n      <ion-fab-button\n        size=\"small\"\n        translucent=\"true\"\n        mode=\"ios\"\n        id=\"options-btn-{{i}}\">\n        <ion-icon\n          color=\"medium\"\n          size=\"small\"\n          color=\"primary\"\n          name=\"ellipsis-vertical\"\n        ></ion-icon>\n      </ion-fab-button>\n      <ion-popover trigger=\"options-btn-{{i}}\" triggerAction=\"click\">\n        <ng-template>\n          <ion-content class=\"ion-no-padding\">\n            <ion-list lines=\"none\" class=\"ion-margin-bottom\">\n              <ion-list-header>\n                <ion-label>Options</ion-label>\n              </ion-list-header>\n              <ion-item detail (click)=\"actions('swap-asset', { item })\">\n                <ion-label>Swap asset</ion-label>\n              </ion-item>\n              <ion-item detail (click)=\"actions('openExternalLink', { item })\">\n                <ion-label>View on block explorer</ion-label>\n              </ion-item>\n            </ion-list>\n          </ion-content>\n        </ng-template>\n      </ion-popover>\n    </ion-col>\n  </ion-row>\n</ion-grid>","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TokenInterface } from '../../interfaces/token.interface';\n\n@Component({\n  selector: 'hexa-swap-assets-modal',\n  templateUrl: './swap-assets-modal.component.html',\n  styleUrls: ['./swap-assets-modal.component.scss'],\n})\nexport class SwapAssetsModalComponent {\n  @Input() public fromAsset!: TokenInterface;\n  @Input() public toAsset?: TokenInterface;\n  public readonly fromAssetControl = new FormControl();\n  public readonly fromAmountControl = new FormControl();\n  public readonly toAssetControl = new FormControl();\n  public readonly toAmountControl = new FormControl();\n  public readonly assets = [\n    {\n      name: 'Ethereum',\n      symbol: 'ETH',\n    },\n    {\n      name: 'USD Coin',\n      symbol: 'USDC',\n    },\n    {\n      name: 'Matic',\n      symbol: 'MATIC',\n    },\n  ];\n  constructor() {}\n\n  onFromAssetChange() {\n    console.log('onFromAssetChange', this.fromAssetControl.value);\n  }\n\n  onToAssetChange() {\n    console.log('onToAssetChange', this.toAssetControl.value);\n  }\n\n  async reviewSwap() {\n    console.log(\n      'reviewSwap',\n      this.fromAssetControl.value,\n      this.fromAmountControl.value,\n      this.toAssetControl.value,\n      this.toAmountControl.value\n    );\n  }\n}\n","<ion-content>\n  <h1>\n    Upcoming feature...\n  </h1>\n  <!-- <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-label position=\"stacked\">Swap from</ion-label>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-item>\n          <ion-select\n            [formControl]=\"fromAssetControl\"\n            (ionChange)=\"onFromAssetChange()\"\n          >\n            <ion-select-option\n              *ngFor=\"let asset of assets\"\n              [value]=\"asset\"\n              >{{ asset.symbol }}</ion-select-option\n            >\n          </ion-select>\n        </ion-item>\n        <ion-item size=\"6\">\n          <ion-input\n            type=\"number\"\n            [formControl]=\"fromAmountControl\"\n          ></ion-input>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-label position=\"stacked\">Swap to</ion-label>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-item>\n          <ion-select\n            [formControl]=\"toAssetControl\"\n            (ionChange)=\"onToAssetChange()\"\n          >\n            <ion-select-option\n              *ngFor=\"let asset of assets\"\n              [value]=\"asset\"\n              >{{ asset.symbol }}</ion-select-option\n            >\n          </ion-select>\n        </ion-item>\n        <ion-item size=\"6\">\n          <ion-input\n            type=\"number\"\n            [formControl]=\"toAmountControl\"\n          ></ion-input>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-button \n          expand=\"block\" \n          color=\"primary\" \n          (click)=\"reviewSwap()\">\n          Review Swap\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid> -->\n</ion-content>","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { ILoadingService } from \"@hexa/interfaces\";\nimport { getInjectionToken, TOKENS_NAME } from \"@hexa/token-injection\";\nimport { AlertController, ModalController, PopoverController, ToastController } from \"@ionic/angular\";\nimport { ethers } from \"ethers\";\nimport { BehaviorSubject, distinctUntilChanged, filter, firstValueFrom, map, tap } from \"rxjs\";\nimport { SwapAssetsModalComponent } from \"../../components/swap-assets-modal/swap-assets-modal.component\";\nimport { TokenInterface } from \"../../interfaces/token.interface\";\nimport { WalletService } from \"../../services/wallet.service\";\n\n@Component({\n  selector: \"hexa-wallet-page\",\n  templateUrl: \"./wallet-page.component.html\",\n  styleUrls: [\"./wallet-page.component.scss\"]\n})\nexport class WalletPageComponent  {\n  public selectedSegment: 'tokens'|'nfts'|'transactions'|string = 'nfts';\n  public readonly account$ = this._walletService.account$;\n  public readonly wallets$ = this._walletService.wallets$;\n  public readonly tokensBalances$ = this._walletService.tokensBalances$;\n\n  constructor(\n    private readonly _alertCtrl: AlertController,\n    private readonly _popoverCtrl: PopoverController,\n    private readonly _modalCtrl: ModalController,\n    private readonly _walletService: WalletService,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_LOADER_SERVICE)) private readonly _loaderService: ILoadingService,\n  ) {}\n\n  async actions(type: string, payload?: any) {\n    console.log('actions', type, payload);\n    switch (true) {\n      case type === 'add-account': {\n        const {data, role} = await this._promptPublicAdress();\n        if (role !== 'ok') return;\n        this._loaderService.setStatus(true);\n        const {values: {address = null}} = data;\n        await this._walletService.addWallet(address);\n        this._loaderService.setStatus(false);\n        const ionPopover = await this._popoverCtrl.getTop();\n        if (ionPopover) {\n          ionPopover.dismiss();\n        }\n        break;\n      }\n      case type === 'toggle-account': {\n        const {account = null, event: {target: {checked = false}}} = payload;\n        if (!account) return;\n        this._loaderService.setStatus(true);\n        const ionPopover = await this._popoverCtrl.getTop();\n        if (ionPopover) {\n          ionPopover.dismiss();\n        }\n        await this._walletService.toggleWallet(account, checked);\n        this._loaderService.setStatus(false);\n        break;\n      }\n      case type === 'swap-asset': {\n        const {item:asset = null} = payload;\n        const { data, role } = await this._promptSwapAsset(asset);\n        console.log('swap-asset', asset, data);\n        if (role !== 'ok') return;\n        // TODO: implement swap with service\n        break;\n      }\n      default:\n        break;\n    }\n    \n  }\n\n  private async _promptSwapAsset(fromAsset: TokenInterface, toAsset?: TokenInterface) {\n    const ionModal = await this._modalCtrl.create({\n      component: SwapAssetsModalComponent,\n      componentProps: {\n        fromAsset,\n        toAsset\n      }\n    });\n    await ionModal.present();\n    const {data, role} = await ionModal.onDidDismiss();\n    return {data, role};      \n  }\n\n  private async _promptPublicAdress() {\n    const ionAlert = await this._alertCtrl.create({\n      header: 'Add account',\n      subHeader: 'You can connect more than one account to view all your balances and transactions in one place.',\n      message: 'Enter wallet public address or ENS name',\n      inputs: [\n        {\n          name: 'address',\n          type: 'text',\n          placeholder: '0x...'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Import',\n          role: 'ok',\n          cssClass: 'primary'\n        }\n      ]\n    });\n    await ionAlert.present();\n    const {data, role} = await ionAlert.onDidDismiss();\n    return {data, role};\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-grid>\n      <ion-row\n        *ngIf=\"account$ | async as account\"\n        class=\"ion-align-items-center ion-padding-start\"\n      >\n        <ion-col size=\"auto\">\n          <h1>Wallet</h1>\n        </ion-col>\n        <ion-col class=\"ion-padding-start\">\n          <ion-chip id=\"accounts-list\" color=\"primary\">\n            <ion-avatar avatar [address]=\"account\" [size]=\"20\"></ion-avatar>\n            <ion-label>\n              {{ account | sliceAddress }}\n            </ion-label>\n            <ion-icon size=\"small\" name=\"chevron-down\"></ion-icon>\n          </ion-chip>\n          <ion-popover\n            id=\"wallet-account-popover\"\n            trigger=\"accounts-list\"\n            triggerAction=\"click\"\n          >\n            <ng-template>\n              <ion-content class=\"ion-no-padding\">\n                <ion-list lines=\"none\" class=\"ion-margin-bottom\">\n                  <ion-list-header>\n                    <ion-label>My accounts</ion-label>\n                  </ion-list-header>\n                  <ion-item class=\"ion-margin-top\">\n                    <ion-checkbox\n                      mode=\"md\"\n                      slot=\"start\"\n                      checked\n                      (click)=\"actions('toggle-account', { account, event: $event })\"\n                    ></ion-checkbox>\n                    <ion-avatar\n                      class=\"isConnected\"\n                      slot=\"start\"\n                      avatar\n                      [address]=\"account\"\n                    ></ion-avatar>\n                    <ion-label>\n                      <h3>{{ account | sliceAddress }}</h3>\n                      <p></p>\n                    </ion-label>\n                    <ion-buttons\n                      slot=\"end\"\n                      class=\"ion-no-margin ion-margin-start\"\n                    >\n                      <ion-button size=\"small\" fill=\"clear\">\n                        <ion-icon\n                          color=\"medium\"\n                          size=\"small\"\n                          slot=\"icon-only\"\n                          name=\"copy-outline\"\n                        ></ion-icon>\n                      </ion-button>\n                      <ion-button size=\"small\" fill=\"clear\">\n                        <ion-icon\n                          color=\"medium\"\n                          size=\"small\"\n                          slot=\"icon-only\"\n                          name=\"ellipsis-vertical-sharp\"\n                        ></ion-icon>\n                      </ion-button>\n                    </ion-buttons>\n                  </ion-item>\n                  <ng-container *ngIf=\"((wallets$ | async)?.length || 0) > 0\">\n                    <ion-item *ngFor=\"let wallet of wallets$ | async\">\n                      <ion-checkbox\n                        mode=\"md\"\n                        slot=\"start\"\n                        [checked]=\"wallet.isDisabled === true ? false : true\"\n                        (click)=\"actions('toggle-account', { account: wallet.address, event: $event })\"\n                      ></ion-checkbox>\n                      <ion-avatar\n                        slot=\"start\"\n                        avatar\n                        [address]=\"wallet.address\"\n                      ></ion-avatar>\n                      <ion-label>\n                        <h3>{{ wallet.address | sliceAddress }}</h3>\n                        <p></p>\n                      </ion-label>\n                      <ion-buttons\n                        slot=\"end\"\n                        class=\"ion-no-margin ion-margin-start\"\n                      >\n                        <ion-button size=\"small\" fill=\"clear\">\n                          <ion-icon\n                            color=\"medium\"\n                            size=\"small\"\n                            slot=\"icon-only\"\n                            name=\"copy-outline\"\n                          ></ion-icon>\n                        </ion-button>\n                        <ion-button size=\"small\" fill=\"clear\">\n                          <ion-icon\n                            color=\"medium\"\n                            size=\"small\"\n                            slot=\"icon-only\"\n                            name=\"ellipsis-vertical-sharp\"\n                          ></ion-icon>\n                        </ion-button>\n                      </ion-buttons>\n                    </ion-item>\n                  </ng-container>\n                  <ion-item\n                    button\n                    class=\"ion-margin-top\"\n                    (click)=\"actions('add-account')\"\n                  >\n                    <ion-icon\n                      size=\"small\"\n                      color=\"medium\"\n                      slot=\"start\"\n                      name=\"add-outline\"\n                    ></ion-icon>\n                    <ion-label>\n                      <h3>Add account</h3>\n                    </ion-label>\n                  </ion-item>\n                </ion-list>\n              </ion-content>\n            </ng-template>\n          </ion-popover>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-toolbar>\n</ion-header>\n<ion-content fullscreen id=\"drive\" class=\"ion-padding-horizontal\">\n  <ion-grid>\n    <ion-row\n      class=\"ion-align-items-start\"\n      *ngIf=\"tokensBalances$ | async as tokensBalances; else skeletonHTML\"\n    >\n      <ion-col size=\"12\">\n        <ion-grid class=\"ion-no-padding\">\n          <ion-row class=\"ion-align-items-end\">\n            <ion-col class=\"ion-text-start\">\n              <ion-label color=\"medium\"> Net Worth </ion-label>\n              <ion-text>\n                <h1>${{ tokensBalances | netWorth }}</h1>\n              </ion-text>\n            </ion-col>\n            <ion-col size=\"3\" class=\"ion-text-end\">\n              <ion-segment [value]=\"selectedSegment\" mode=\"ios\">\n                <ion-segment-button\n                  value=\"tokens\"\n                  (click)=\"selectedSegment = 'tokens'\"\n                >\n                  <ion-label>Tokens</ion-label>\n                </ion-segment-button>\n                <ion-segment-button\n                  value=\"nfts\"\n                  (click)=\"selectedSegment = 'nfts'\"\n                >\n                  <ion-label>NFTs</ion-label>\n                </ion-segment-button>\n                <!-- <ion-segment-button value=\"transaction\" (click)=\"selectedSegment = 'transaction'\">\n                  <ion-label>Transactions</ion-label>\n                </ion-segment-button> -->\n              </ion-segment>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-col>\n      <!-- Tokens -->\n      <ng-container *ngIf=\"selectedSegment === 'tokens'\">\n        <ion-col size=\"12\" *ngIf=\"(tokensBalances | assetsType : 'token')?.length||0 > 0; else noItems\">\n          <ion-grid class=\"ion-no-padding ion-padding-bottom\">\n            <ion-row class=\"ion-align-items-start ion-margin-top\">\n              <ion-col size=\"4\">\n                <ion-text color=\"medium\"> Token </ion-text>\n              </ion-col>\n              <ion-col class=\"\">\n                <ion-text color=\"medium\"> Price </ion-text>\n              </ion-col>\n              <ion-col\n                class=\"ion-text-right ion-align-items-center ion-justify-content-end\"\n              >\n                <ion-text color=\"medium\"> Balance </ion-text>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n          <div>\n            <hexa-items-container\n              [items]=\"tokensBalances | assetsType : 'token'\"\n              (actionsEvent)=\"actions($event.type, $event.payload)\"\n            ></hexa-items-container>\n          </div>\n        </ion-col>\n        <ng-template #noItems>\n          <ion-col size=\"12\">\n            <ion-grid class=\"ion-no-padding ion-text-center noItems\">\n              <ion-row class=\"item ion-align-items-center ion-padding-center\">\n                <ion-col class=\"ion-text-center ion-margin-vertical\">\n                  <ion-label>\n                      There is no token in your wallet\n                  </ion-label>\n                  <ion-text color=\"medium\">\n                    <p>\n                      You can buy token from any exchange and send to your wallet address to see it here.\n                    </p>\n                  </ion-text>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-col>\n        </ng-template>\n      </ng-container>\n      <!-- NFTs -->\n      <ng-container *ngIf=\"selectedSegment === 'nfts'\">\n        <ng-container *ngIf=\"(tokensBalances | assetsType : 'nft')?.length||0 > 0; else noNFTs\">\n          <ng-container\n            *ngFor=\"let nftgroupe of tokensBalances | assetsType : 'nft'\">\n            <ion-col\n              size-xs=\"12\"\n              size-sm=\"6\"\n              size-md=\"4\"\n              size-lg=\"3\"\n              *ngFor=\"let nft of nftgroupe.nft_data; let i = index\"\n            >\n              <ion-card mode=\"ios\">\n                <ion-img\n                  *ngIf=\"\n                    nft?.external_data?.image_512 || nft?.external_data?.image\n                  \"\n                  [src]=\"\n                    nft?.external_data?.image_512 || nft?.external_data?.image\n                  \"\n                ></ion-img>\n                <ion-card-content>\n                  <ion-card-title>\n                    {{ nft?.external_data?.name }}\n                  </ion-card-title>\n                  <ion-card-subtitle>\n                    {{ nftgroupe?.name || nftgroupe?.symbol }}\n                  </ion-card-subtitle>\n                </ion-card-content>\n              </ion-card>\n            </ion-col>\n          </ng-container>\n        </ng-container>\n        <ng-template #noNFTs>\n          <ion-col size=\"12\">\n            <ion-grid class=\"ion-no-padding ion-text-center noItems\">\n              <ion-row class=\"item ion-align-items-center ion-padding-center\">\n                <ion-col class=\"ion-text-center ion-margin-vertical\">\n                  <ion-label>\n                      There is no NFTs in your wallet\n                  </ion-label>\n                  <ion-text color=\"medium\">\n                    <p>\n                      You can buy NFTs from any marketplace and they will appear here.\n                    </p>\n                  </ion-text>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </ion-col>\n        </ng-template>\n      </ng-container>\n    </ion-row>\n    <!-- Skeleton loading HTML -->\n    <ng-template #skeletonHTML>\n      <ion-row class=\"ion-align-items-start\">\n        <ion-col size=\"12\">\n          <ion-grid class=\"ion-no-padding\">\n            <ion-row\n              *ngFor=\"let el of [].constructor(10)\"\n              role=\"article\"\n              class=\"item clickable ion-align-items-center ion-padding-start\"\n            >\n              <ion-col size=\"1\" class=\"ion-padding\">\n                <ion-skeleton-text\n                  animated\n                  style=\"width: 100%\"\n                ></ion-skeleton-text>\n              </ion-col>\n              <ion-col size=\"9\" class=\"ion-padding-vertical\">\n                <ion-skeleton-text\n                  animated\n                  style=\"width: 100%\"\n                ></ion-skeleton-text>\n              </ion-col>\n              <ion-col size=\"2\" class=\"ion-padding\">\n                <ion-skeleton-text\n                  animated\n                  style=\"width: 100%\"\n                ></ion-skeleton-text>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-col>\n      </ion-row>\n    </ng-template>\n  </ion-grid>\n</ion-content>\n","import { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[avatar]\",\n})\nexport class AvatarDirective implements AfterViewInit {\n\n  @Input() address!: string;\n  @Input() size?: number;\n\n  constructor(\n    private ref: ElementRef,\n    private renderer:Renderer2,\n  ) { \n\n  }\n\n  async ngAfterViewInit() {\n    const size = this.size || 32;\n    const el = this.ref.nativeElement as HTMLElement;\n    // build element with jazzicon\n    const jazzicon = await import('jazzicon-ts').then(m => m.default);\n    const addr = this.address.slice(2, 10);\n    const value = jazzicon(size, parseInt(addr, 16));\n    // add to dom\n    this.renderer.appendChild(el, value);\n    // set styles\n    this.renderer.setStyle(el, 'display', 'flex');\n    this.renderer.setStyle(el, 'align-items', 'center');\n    this.renderer.setStyle(el, 'min-height', `${size}px`);\n    this.renderer.setStyle(el, 'min-width', `${size}px`);\n    this.renderer.setStyle(el, 'border-color', 'transparent');\n    this.renderer.setStyle(el, 'border-width', '2px');\n    this.renderer.setStyle(el, 'border-style', 'solid');\n  }\n}","import { Route } from '@angular/router';\nimport { WalletPageComponent } from './containers/wallet-page/wallet-page.component';\n\nexport const walletRoutes: Route[] = [\n  {\n    path: '', \n    pathMatch: 'full', \n    component: WalletPageComponent\n  }\n];\n","import { Pipe } from \"@angular/core\";\nimport { TokenInterface } from \"../interfaces/token.interface\";\n\n@Pipe({\n  name: \"assetsType\"\n})\nexport class AssetsTypePipe {\n  transform(value: TokenInterface[], typeName: 'token'|'nft'|'tx'): any {\n    if (!value) return [];\n    if (!typeName) return value;\n    switch (true) {\n      case typeName === 'token':\n        return value\n          .filter((token) => token.type !== \"nft\" && token.balance > 0)\n          .filter((token) => token.balance > 0 )\n          .filter(token => !token.name.includes('.'))\n          .sort((a, b) => b.value - a.value);\n      case typeName === 'nft':\n        return value.filter((token) => token.type === \"nft\" && token.balance > 0);\n      case typeName === 'tx':\n        throw new Error('Not implemented yet');\n    }\n  }\n}","import { Pipe } from \"@angular/core\";\n\n@Pipe({\n  name: \"diffPercent\"\n})\nexport class DiffPercentPipe {\n  transform(value: number|undefined, oldValue: number|undefined): any {\n    if (!value || !oldValue) return 0;\n    const percent = ((value - oldValue) / oldValue) * 100;\n    // returtn rounded with 2 decimal percent value\n    return Math.round(percent * 100) / 100;\n  }\n}","import { Pipe } from \"@angular/core\";\n\n@Pipe({\n  name: \"netWorth\"\n})\nexport class NetWorthPipe {\n  transform(value: {value:number}[]) {\n    if (!value) return 0;\n    const total = value.reduce(\n      (acc, token) => acc + token.value||0, \n      0\n    );\n    // only 2 decimals\n    return Math.round(total * 100) / 100;\n  }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sliceAddress'\n})\nexport class SliceAddressPipe implements PipeTransform {\n\n  transform(value?: string|null): string {\n    if (!value) {\n      return '';\n    }\n    if (value.length < 10) {\n      return value;\n    }\n    return `${value.slice(0, 6)}...${value.slice(-4)}`;\n    \n  }\n\n}\n","import { Inject, Injectable } from \"@angular/core\";\nimport { DIDDataStore } from '@glazed/did-datastore';\nimport { IAuthService, IDatastoreService, ILoadingService } from \"@hexa/interfaces\";\nimport { getInjectionToken, TOKENS_NAME } from \"@hexa/token-injection\";\nimport { BehaviorSubject, distinctUntilChanged, filter, tap } from \"rxjs\";\nimport { TokenInterface } from \"../interfaces/token.interface\";\n\nconst CHAIN_IDS = [\n  { id: 1, name: \"Ethereum Mainnet\", logo: 'https://www.covalenthq.com/static/images/icons/display-icons/ethereum-eth-logo.png' },\n  // { id: 3, name: \"Ropsten Testnet\" },\n  // { id: 4, name: \"Rinkeby Testnet\" },\n  // { id: 5, name: \"Goerli Testnet\" },\n  // { id: 42, name: \"Kovan Testnet\" },\n  { id: 56, name: \"Binance Smart Chain Mainnet\", logo: 'https://www.covalenthq.com/static/images/icons/display-icons/binance-coin-bnb-logo.png' },\n  // { id: 97, name: \"Binance Smart Chain Testnet\" },\n  { id: 137, name: \"Polygon Mainnet\", logo: 'https://www.covalenthq.com/static/images/icons/display-icons/polygon-matic-logo.png' },\n  // {  id: 80001, name: \"Polygon Mumbai Testnet\", logo: 'https://www.covalenthq.com/static/images/icons/display-icons/polygon-matic-logo.png' },\n  // { id: 80001, name: \"Polygon Testnet\" },\n  { id: 43114, name: \"Avalanche Mainnet\", logo: \"https://www.covalenthq.com/static/images/icons/display-icons/avalanche-avax-logo.png\" },\n  // { id: 43113, name: \"Avalanche Testnet\" },\n  { id: 250, name: \"Fantom Opera Mainnet\", logo: \"https://www.covalenthq.com/static/images/icons/display-icons/fantom-ftm-logo.png\" },\n  // { id: 4002, name: \"Fantom Opera Testnet\" },\n  // { id: 128, name: \"Heco Mainnet\" },\n  // { id: 256, name: \"Heco Testnet\" },\n  // { id: 1666600000, name: \"Harmony Mainnet\" },\n  // { id: 1666700000, name: \"Harmony Test\" },\n  // { id: 100, name: \"xDai Chain\" },\n  { id: 42161, name: \"Arbitrum Mainnet\" },\n  // { id: 421611, name: \"Arbitrum Testnet\" },\n  { id: 10,name: 'Optimism Mainnet', logo: 'https://gateway.optimism.io/static/media/optimism.caeb9392.svg' },\n  // { id: 69, name: 'Optimism Testnet' }\n];\n\nconst ROOT_DB_COLLECTION = 'd-wallet';\n\n@Injectable()\nexport class WalletService {\n  public readonly account$ = this._authService.account$.pipe(\n    filter(Boolean),\n    distinctUntilChanged(),\n    tap(async (account) => {\n      if (!account) return;\n      if (this._tokensBalances$.value) {\n        return;\n      }\n      this._loaderService.setStatus(true);\n      this._tokensBalances$.next([]);\n      this._loadEVMTokensBalances(account);\n      const wallets = await this._loadOtherWallets();\n      await Promise.all(\n        wallets\n        .filter((w)=> !w.isDisabled)\n        .map(\n          (w) => this._loadEVMTokensBalances(w.address)\n        )\n      );\n      this._loaderService.setStatus(false);\n    })\n  );\n  private readonly _wallets$ = new BehaviorSubject<{address: string;isDisabled?: boolean;}[]>(null as any);\n  public readonly wallets$ = this._wallets$.asObservable();\n  private readonly _tokensBalances$ = new BehaviorSubject<TokenInterface[]>( null as any);\n  public readonly tokensBalances$ = this._tokensBalances$.asObservable()\n\n  constructor(\n    @Inject(getInjectionToken(TOKENS_NAME.APP_LOADER_SERVICE)) private readonly _loaderService: ILoadingService,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_DATASTORE_SERVICE)) private readonly _datastoreService: IDatastoreService<DIDDataStore>,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_WALLET_SERVICE_APIKEY)) private readonly _apiKey: string,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_WEB3AUTH_SERVICE)) private readonly _authService: IAuthService\n  ) {}\n\n  async addWallet(address: string) {\n    const walletsData = this._wallets$.value;\n    const wallets = [...walletsData, {address}];\n    await this._datastoreService.saveData(\n      { wallets },\n      ROOT_DB_COLLECTION,\n      ['wallets']\n    );\n    this._wallets$.next(wallets);\n    await this._loadEVMTokensBalances(address);\n    return {address};\n  }\n\n  async toggleWallet(address: string, isDisabled: boolean) {\n    const walletsData = this._wallets$.value;\n    const wallets = walletsData.map((w) => {\n      if (w.address === address) {\n        return { ...w, isDisabled };\n      }\n      return w;\n    });\n    // update state\n    this._wallets$.next(wallets);\n    // update balances value\n    const balances = this._tokensBalances$.value;\n    if (isDisabled) {\n      const filteredBalances = balances.filter((b) => b.ownerAddress !== address);\n      this._tokensBalances$.next(filteredBalances);\n    } else {\n      await this._loadEVMTokensBalances(address);\n    }\n    // finaly save to db\n    await this._datastoreService.saveData(\n      { wallets },\n      ROOT_DB_COLLECTION,\n      ['wallets']\n    );\n  }\n\n  private async _loadOtherWallets() {\n    const {wallets = []} = await this._datastoreService.getData(\n      ROOT_DB_COLLECTION, \n      ['wallets'], // key\n      { wallets: [] } // default value to save if not exist (optional)\n    );\n    // update state\n    this._wallets$.next(wallets||[]);\n    return this._wallets$.value;\n  }\n\n  async  getTokensBalances(chainId: string, address: string) {\n    const res = await fetch(`https://api.covalenthq.com/v1/${chainId}/address/${address}/balances_v2/?quote-currency=USD&format=JSON&nft=true&no-nft-fetch=false&key=${this._apiKey}`)\n    const balances = (await res.json()).data.items;\n    const formatedBalances: TokenInterface[] = balances.map((t:any) => {\n        return <TokenInterface>{\n            address: t.contract_address,\n            name: t.contract_name,\n            symbol: t.contract_ticker_symbol,\n            logo: t.logo_url,\n            type: t.type,\n            nft_data: t.nft_data,\n            decimals: t.contract_decimals,\n            balance: parseFloat((t.balance / 10 ** t.contract_decimals).toFixed(4)),\n            rate: t.quote_rate,\n            rate24h: t.quote_rate_24h,\n            value: t.quote ? parseFloat(t.quote.toFixed(2)) : 0,\n            chainId: parseInt(chainId),\n            chainLogo: CHAIN_IDS.find(c => c.id === parseInt(chainId))?.logo,\n            ownerAddress: address\n        }\n    });\n    return {balances: formatedBalances};\n  }\n\n  private async _loadEVMTokensBalances(account: string) {\n    await Promise.all(CHAIN_IDS.map(async (chain) => {\n      const {balances} = await this.getTokensBalances(\n        `${chain.id}`,\n        account\n      );\n      this._tokensBalances$.next([\n        ...this._tokensBalances$.value,\n        ...balances\n      ]);\n    })).catch(err => err);\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { walletRoutes } from './lib.routes';\nimport { WalletPageComponent } from './containers/wallet-page/wallet-page.component';\nimport { IonicModule } from '@ionic/angular';\nimport { ItemsContainerComponent } from './components/items-container/items-container.component';\nimport { NetWorthPipe } from './pipes/net-worth.pipe';\nimport { SliceAddressPipe } from './pipes/slice-address.pipe';\nimport { AssetsTypePipe } from './pipes/assets-type.pipe';\nimport { WalletService } from './services/wallet.service';\nimport { DiffPercentPipe } from './pipes/diff-percent.pipe';\nimport { AvatarDirective } from './directives/avatar.directive';\nimport { SwapAssetsModalComponent } from './components/swap-assets-modal/swap-assets-modal.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    WalletPageComponent,\n    ItemsContainerComponent,\n    SwapAssetsModalComponent,\n    AvatarDirective,\n    NetWorthPipe,\n    SliceAddressPipe,\n    AssetsTypePipe,\n    DiffPercentPipe,\n  ],\n  imports: [\n    CommonModule, \n    IonicModule,\n    RouterModule.forChild(walletRoutes),\n    ReactiveFormsModule\n  ],\n  providers: [\n    WalletService\n  ]\n})\nexport class WalletModule {}\n"],"names":["EventEmitter","SimpleChanges","ModalController","PopoverController","BehaviorSubject","i0","item","MAX_ITEMS_TO_DISPLAY","ItemsContainerComponent","constructor","_popCtrl","_modalCtrl","ngOnChanges","changes","currentValue","maxItemToDisplay$","value","next","actions","type","payload","_preview","popover","getTop","dismiss","undefined","address","window","open","actionsEvent","emit","trackByfn","index","_id","console","log","selectors","inputs","items","outputs","features","decls","vars","consts","template","FormControl","SwapAssetsModalComponent","name","symbol","onFromAssetChange","fromAssetControl","onToAssetChange","toAssetControl","reviewSwap","fromAmountControl","toAmountControl","fromAsset","toAsset","getInjectionToken","TOKENS_NAME","AlertController","WalletService","account","event","WalletPageComponent","_alertCtrl","_popoverCtrl","_walletService","_loaderService","account$","wallets$","tokensBalances$","data","role","_promptPublicAdress","setStatus","values","addWallet","ionPopover","target","checked","toggleWallet","asset","_promptSwapAsset","ionModal","create","component","componentProps","present","onDidDismiss","ionAlert","header","subHeader","message","placeholder","buttons","text","cssClass","APP_LOADER_SERVICE","ElementRef","Renderer2","AvatarDirective","ref","renderer","ngAfterViewInit","size","el","nativeElement","jazzicon","then","m","default","addr","slice","parseInt","appendChild","setStyle","walletRoutes","path","pathMatch","AssetsTypePipe","transform","typeName","filter","token","balance","includes","sort","a","b","Error","pure","DiffPercentPipe","oldValue","percent","Math","round","NetWorthPipe","total","reduce","acc","SliceAddressPipe","length","distinctUntilChanged","tap","CHAIN_IDS","id","logo","ROOT_DB_COLLECTION","_datastoreService","_apiKey","_authService","pipe","Boolean","_tokensBalances$","_loadEVMTokensBalances","wallets","_loadOtherWallets","Promise","all","w","isDisabled","map","_wallets$","asObservable","walletsData","saveData","balances","filteredBalances","ownerAddress","getData","getTokensBalances","chainId","res","fetch","json","formatedBalances","t","contract_address","contract_name","contract_ticker_symbol","logo_url","nft_data","decimals","contract_decimals","parseFloat","toFixed","rate","quote_rate","rate24h","quote_rate_24h","quote","chainLogo","find","c","chain","catch","err","APP_DATASTORE_SERVICE","APP_WALLET_SERVICE_APIKEY","APP_WEB3AUTH_SERVICE","factory","CommonModule","RouterModule","IonicModule","ReactiveFormsModule","WalletModule","imports","forChild","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}