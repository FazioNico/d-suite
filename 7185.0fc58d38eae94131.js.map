{"version":3,"file":"7185.0fc58d38eae94131.js","mappings":"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","sources":["./libs/welcome/src/index.ts","./libs/welcome/src/lib/components/background/background.component.ts","./libs/welcome/src/lib/components/background/background.component.html","./libs/welcome/src/lib/components/current-time/current-time.component.html","./libs/welcome/src/lib/components/current-time/current-time.component.ts","./libs/welcome/src/lib/containers/welcome-page/welcome-page.component.ts","./libs/welcome/src/lib/containers/welcome-page/welcome-page.component.html","./libs/welcome/src/lib/lib.routes.ts","./libs/welcome/src/lib/welcome.module.ts"],"sourcesContent":["export * from './lib/welcome.module';\n\nexport * from './lib/lib.routes';\n","import { Component, ElementRef, Input, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'hexa-background',\n  templateUrl: './background.component.html',\n  styleUrls: ['./background.component.scss']\n})\nexport class BackgroundComponent implements OnInit, OnChanges {\n\n  @Input() isDevMode: boolean|undefined;\n  @Input() url: string|undefined = undefined;\n  imgUrl: string|undefined;\n\n  constructor(\n    private el: ElementRef,\n    private readonly _renderer: Renderer2  \n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.imgUrl = (Boolean(this.url) === true) \n      ? this.url\n      : undefined;\n    // check url valid formating\n    if (this.imgUrl) {\n      try {\n        const isUrlValid = new URL(this.imgUrl);\n        if (isUrlValid) {\n          this.el.nativeElement.style.backgroundImage = `url(${this.imgUrl})`;\n        }\n      } catch (error) {\n        console.log(`[ERROR] {BackgroundComponent} Invalide URL formatting: \"${this.imgUrl}\"`);\n        this.fadeIn();\n        throw new Error(`Invalide URL formatting: \"${this.imgUrl}\"`);\n      }\n    } \n    this.fadeIn();\n  }\n\n  async ngOnChanges(simpleChanges: SimpleChanges): Promise<void> {\n    if (!simpleChanges?.['url']) {\n      return;\n    }\n    if (simpleChanges?.['url']?.firstChange) {\n      return;\n    }\n    this._renderer.setStyle(\n      this.el.nativeElement, \n      'opacity', \n      0\n    );\n    this.ngOnInit();\n  }\n\n  fadeIn() {\n    let opacity = 0;\n    const int = setInterval(async () => {\n      opacity += 0.01;\n      this._renderer.setStyle(\n        this.el.nativeElement, \n        'opacity', \n        opacity\n      );\n      if (opacity >= 1) {\n        clearInterval(int);\n      }\n    }, 3);\n  }\n}","<div \n  class=\"bgContainer\"\n  [style.backgroundImage]=\"(imgUrl?.length||0 )? 'url('+ imgUrl +')' : null\">\n  <ng-content></ng-content>\n</div>","<time *ngIf=\"currentDate;else displayError\">\n  {{currentDate.toLocaleTimeString().slice(0, 5).split(':')[0]}}<span>:</span>{{currentDate.toLocaleTimeString().slice(0, 5).split(':')[1]}}\n</time>\n<span *ngIf=\"cityname\">{{cityname}}</span>\n<ng-template #displayError>\n  <p>{{errorMessage}}</p>\n</ng-template>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hexa-current-time',\n  templateUrl: './current-time.component.html',\n  styleUrls: ['./current-time.component.scss']\n})\nexport class CurrentTimeComponent implements OnInit {\n\n  currentDate!: Date;\n  errorMessage!: string;\n  private dt!: number;\n  @Input() cityname!: string;\n\n  async ngOnInit() {\n    if (!this.cityname || this.cityname === '') {\n      this.currentDate = new Date();\n      setInterval(() => {\n        this.currentDate = new Date();\n      }, 1000);\n    } else {\n      await this._getTimeFromLocation();\n      if (!this.dt) {\n        return;\n      }\n      this.currentDate = new Date(this.dt);\n      setInterval(() => {\n        this.dt += 1000;\n        this.currentDate = new Date(this.dt);\n      } , 1000);\n    }\n  }\n\n  private async _getTimeFromLocation() {\n    if (!this.cityname || this.cityname === '') {\n      this.errorMessage = 'City name not provided';\n      return;\n    }\n    const data = await import('city-timezones')\n      .then((m) => {\n        const res = m.lookupViaCity(this.cityname).shift();\n        return res;\n      })\n      .catch((err) => {\n        this.errorMessage = err.message;\n      });\n    if (!data) {\n      this.errorMessage = 'City not available';\n      return;\n    }\n    const timeZone = data?.timezone;\n    const time = new Date().toLocaleString('en-US', {timeZone});\n    this.dt = new Date(time).getTime();\n  }\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { IDatastoreService, ILoadingService } from '@hexa/interfaces';\nimport { getInjectionToken, TOKENS_NAME } from '@hexa/token-injection';\nimport {\n  AlertController,\n  AlertInput,\n  ModalController,\n  PopoverController,\n} from '@ionic/angular';\nimport { BehaviorSubject, distinctUntilChanged } from 'rxjs';\nimport { DIDDataStore } from '@glazed/did-datastore';\nimport { IConfig } from '../../interfaces/config.interface';\nimport { IBackgroundConfig } from '../../interfaces/background-config.interface';\n\nconst ROOT_DB_COLLECTION = 'd-welcome';\nconst DEFAULT_WIDGETS_CONFIG: IConfig = {\n  background: {\n    url: undefined\n  }\n};\nconst WIDGETS_MESSAGE = {\n  background: `You can provide a URL address of the image you want to use as a background.`,\n};\nconst WIDGETS_INPUTS_OPTIONS = {\n  background: (background: {\n    // apiKey?: string;\n    // query?: string;\n    url?: string;\n  }) => [\n    // {\n    //   name: 'unsplashClientId',\n    //   type: 'text',\n    //   placeholder: 'Unsplash Client ID',\n    //   value: background?.unsplashClientId,\n    // },\n    // {\n    //   name: 'query',\n    //   type: 'text',\n    //   placeholder: 'Unsplash query to search images',\n    //   value: background?.query,\n    // },\n    {\n      name: 'url',\n      type: 'text',\n      placeholder: 'Web URL address of the image',\n      value: background?.url,\n    },\n  ],\n};\n\n@Component({\n  selector: 'hexa-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss'],\n})\nexport class WelcomePageComponent implements OnInit {\n  text = 'Welcome';\n  private readonly _config$: BehaviorSubject<IConfig> = new BehaviorSubject(\n    null as any\n  );\n  public readonly config$ = this._config$\n    .asObservable()\n    .pipe(\n      distinctUntilChanged(\n        (prev, next) => JSON.stringify(prev) === JSON.stringify(next)\n      )\n    );\n  constructor(\n    private readonly _modal: ModalController,\n    private readonly _alertCtrl: AlertController,\n    private readonly _popoverCtrl: PopoverController,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_IS_PROD))\n    public readonly isProd: boolean,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_DATASTORE_SERVICE))\n    private readonly _datastoreService: IDatastoreService<DIDDataStore>,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_LOADER_SERVICE))\n    private readonly _loaderService: ILoadingService\n  ) {}\n\n  async ngOnInit() {\n    if (this._config$.value) {\n      return;\n    }\n    // get config from db\n    const { background } = await this._datastoreService.getData(\n      ROOT_DB_COLLECTION,\n      ['widgetsConfig'],\n      DEFAULT_WIDGETS_CONFIG\n    );\n    // update app state\n    this._config$.next({\n      background,\n    });\n  }\n\n  ionViewWillEnter() {\n    this._sayHello();\n  }\n\n  async actions(type: string, payload?: any) {\n    switch (true) {\n      case type === 'open-settings-modal': {\n        // close existing popover\n        const popover = await this._popoverCtrl.getTop();\n        if (popover) {\n          await popover.dismiss();\n        }\n        // prompt settings modal\n        const settings = await this._openAlertSettings(payload);\n        // save settings to db\n        if (settings) {\n          this.actions('saveConfig', {\n            [payload]: settings,\n          });\n        }\n        break;\n      }\n      case type === 'saveConfig': {\n        this._loaderService.setStatus(true);\n        const data = {\n          ...this._config$.value,\n          ...payload,\n        };\n        // update app state\n        this._config$.next(data);\n        // save config to db\n        await this._datastoreService.saveData(data, ROOT_DB_COLLECTION, [\n          'widgetsConfig',\n        ]);\n        this._loaderService.setStatus(false);\n        // TODO: display notification\n        break;\n      }\n    }\n  }\n\n  private _sayHello(): void {\n    const currentDate = new Date();\n    switch (true) {\n      case currentDate.getHours() < 5:\n        this.text = 'Good night';\n        break;\n      case currentDate.getHours() < 12:\n        this.text = 'Good morning';\n        break;\n      case currentDate.getHours() < 18:\n        this.text = 'Good afternoon';\n        break;\n      case currentDate.getHours() < 24:\n        this.text = 'Good evening';\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async _openAlertSettings(widgetType: 'background') {\n    const inputs = WIDGETS_INPUTS_OPTIONS[widgetType](\n      this._config$.value[widgetType] as any\n    ) as AlertInput[];\n    if (!inputs) {\n      return;\n    }\n    // create header title capitalized\n    const header = `${widgetType[0].toUpperCase()}${widgetType.slice(\n      1\n    )} Settings`;\n    const message = WIDGETS_MESSAGE[widgetType];\n    const alert = await this._alertCtrl.create({\n      header,\n      message,\n      inputs,\n      buttons: [\n        { text: 'Cancel', role: 'cancel', cssClass: 'secondary' },\n        { text: 'Ok' },\n      ],\n    });\n    await alert.present();\n    const { data, role } = await alert.onDidDismiss();\n    if (role === 'cancel' || role === 'backdrop') {\n      return;\n    }\n    const { values = null } = data;\n    return values;\n  }\n}\n","<ion-content\n  fullscreen=\"true\"\n  class=\"ion-padding-horizontal\"\n  *ngIf=\"config$ | async as config\"\n  class=\"ion-no-padding\"\n>\n  <ion-grid class=\"header ion-no-padding ion-padding-horizontal\">\n    <ion-row class=\"ion-no-padding ion-align-items-center\">\n      <ion-col size=\"auto\">\n        <ion-menu-button></ion-menu-button>\n      </ion-col>\n      <!-- <ion-col size=\"auto\">\n        <ion-button id=\"add-btn\" fill=\"clear\" size=\"large\">\n          <ion-icon size=\"small\" name=\"add-sharp\"></ion-icon>\n        </ion-button>\n        <ion-popover trigger=\"add-btn\" triggerAction=\"click\">\n          <ng-template>\n            <ion-content class=\"ion-no-padding\">\n              <ion-list lines=\"none\" class=\"ion-margin-bottom\">\n                <ion-list-header>\n                  <ion-label>Add Widgets</ion-label>\n                </ion-list-header>\n                <ion-item\n                  button\n                  (click)=\"actions('add-widget', 'current-time')\"\n                >\n                  <ion-label>\n                    <h3>Current Time</h3>\n                    <p>\n                      Display specific location time\n                    </p>\n                  </ion-label>\n                </ion-item>\n              </ion-list>\n            </ion-content>\n          </ng-template>\n        </ion-popover>\n      </ion-col> -->\n      <ion-col class=\"ion-text-end\">\n        <ion-button id=\"settings-btn\" fill=\"clear\" size=\"large\">\n          <ion-icon size=\"small\" name=\"ellipsis-vertical-sharp\"></ion-icon>\n        </ion-button>\n        <ion-popover trigger=\"settings-btn\" triggerAction=\"click\">\n          <ng-template>\n            <ion-content class=\"ion-no-padding\">\n              <ion-list lines=\"none\" class=\"ion-no-padding ion-margin-bottom\">\n                <ion-list-header class=\"ion-margin-bottom\">\n                  <ion-label>Widgets Settings</ion-label>\n                </ion-list-header>\n                <ion-item\n                  button\n                  (click)=\"actions('open-settings-modal', 'background')\"\n                >\n                  <ion-label>\n                    <h3>Background</h3>\n                    <p>\n                      Change background image\n                    </p>\n                  </ion-label>\n                </ion-item>\n              </ion-list>\n            </ion-content>\n          </ng-template>\n        </ion-popover>\n      </ion-col>\n      <ion-col size=\"auto\">\n        <div style=\"width: 82px\"></div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n  <hexa-background\n    [url]=\"config?.background?.url\"\n    [isDevMode]=\"!isProd\"\n  >\n    <div id=\"flexContainer\">\n      <hexa-current-time></hexa-current-time>\n      <h1>{{ text }}!</h1>\n    </div>\n  </hexa-background>\n</ion-content>\n","import { Route } from '@angular/router';\nimport { WelcomePageComponent } from './containers/welcome-page/welcome-page.component';\n\nexport const welcomeRoutes: Route[] = [\n  {\n    path: '', \n    pathMatch: 'full', \n    component: WelcomePageComponent\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { welcomeRoutes } from './lib.routes';\nimport { WelcomePageComponent } from './containers/welcome-page/welcome-page.component';\nimport { CurrentTimeComponent } from './components/current-time/current-time.component';\nimport { BackgroundComponent } from './components/background/background.component';\n\n@NgModule({\n  declarations: [\n    WelcomePageComponent,\n    CurrentTimeComponent,\n    BackgroundComponent\n  ],\n  imports: [\n    CommonModule, \n    IonicModule,\n    RouterModule.forChild(welcomeRoutes)\n  ],\n})\nexport class WelcomeModule {}\n"],"names":["ElementRef","Renderer2","SimpleChanges","BackgroundComponent","constructor","el","_renderer","undefined","ngOnInit","imgUrl","Boolean","url","isUrlValid","URL","nativeElement","style","backgroundImage","error","console","log","fadeIn","Error","ngOnChanges","simpleChanges","firstChange","setStyle","opacity","int","setInterval","clearInterval","selectors","inputs","isDevMode","features","ngContentSelectors","decls","vars","consts","template","i0","CurrentTimeComponent","cityname","currentDate","Date","_getTimeFromLocation","dt","errorMessage","data","then","m","res","lookupViaCity","shift","catch","err","message","timeZone","timezone","time","toLocaleString","getTime","getInjectionToken","TOKENS_NAME","AlertController","ModalController","PopoverController","BehaviorSubject","distinctUntilChanged","ROOT_DB_COLLECTION","DEFAULT_WIDGETS_CONFIG","background","WIDGETS_MESSAGE","WIDGETS_INPUTS_OPTIONS","name","type","placeholder","value","WelcomePageComponent","_modal","_alertCtrl","_popoverCtrl","isProd","_datastoreService","_loaderService","_config$","asObservable","pipe","prev","next","JSON","stringify","getData","ionViewWillEnter","_sayHello","actions","payload","popover","getTop","dismiss","settings","_openAlertSettings","setStatus","saveData","getHours","text","widgetType","header","toUpperCase","slice","alert","create","buttons","role","cssClass","present","onDidDismiss","values","APP_IS_PROD","APP_DATASTORE_SERVICE","APP_LOADER_SERVICE","welcomeRoutes","path","pathMatch","component","CommonModule","RouterModule","IonicModule","WelcomeModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}