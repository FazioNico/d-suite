{"version":3,"file":"3161.0a630cba0577d5d2.js","mappings":"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","sources":["./libs/notes/src/index.ts","./libs/notes/src/lib/components/note-modal/note-modal.component.ts","./libs/notes/src/lib/components/note-modal/note-modal.component.html","./libs/notes/src/lib/containers/notes-page/notes-page.component.ts","./libs/notes/src/lib/containers/notes-page/notes-page.component.html","./libs/notes/src/lib/lib.routes.ts","./libs/notes/src/lib/notes.module.ts","./libs/notes/src/lib/services/notes.service.ts"],"sourcesContent":["export * from './lib/notes.module';\n\nexport * from './lib/lib.routes';\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from \"@angular/core\";\nimport { FormArray, FormControl, FormGroup } from \"@angular/forms\";\nimport { ModalController } from \"@ionic/angular\";\nimport { NoteInterface } from \"../../services/notes.service\";\n\n@Component({\n  selector: \"hexa-note-modal\",\n  templateUrl: \"./note-modal.component.html\",\n  styleUrls: [\"./note-modal.component.scss\"]\n})\nexport class NoteModalComponent {\n  // input data that will patch the form on changes\n  private _item?: NoteInterface; // private property _item\n\n  // use getter setter to define the property\n  get item(): NoteInterface|undefined { \n    return this._item;\n  }\n  \n  @Input()\n  set item(val: any) {\n    console.log('previous item = ', this._item);\n    console.log('currently selected item=', val);\n    this._item = val;\n    this.form.patchValue(val);\n    // patch keywords\n    if (!val?.keywords) {\n      return;\n    }\n    const keywords = this.form.get('keywords') as FormArray;\n    keywords.clear();\n    val.keywords.forEach((keyword: string) => {\n      keywords.push(new FormControl(keyword));\n    });\n  }\n  \n  public form = new FormGroup({\n    title: new FormControl(''),\n    content: new FormControl(''),\n    createdIsoDateTime: new FormControl(new Date().toISOString()),\n    lastModifiedIsoDateTime: new FormControl(),\n    keywords: new FormArray([] as any),\n  });\n\n  constructor(\n    public readonly modalCtrl: ModalController,\n  ) { }\n\n  async addKeyword(value: any) {\n    const keywords = this.form.get('keywords') as FormArray;\n    keywords.push(new FormControl(value));\n  }\n\n  async removeKeyword(index: number) {\n    const keywords = this.form.get('keywords') as FormArray;\n    keywords.removeAt(index);\n  }\n\n\n}","<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"12\">\n        <ion-list [formGroup]=\"form\">\n          <ion-item>\n            <ion-label>\n              <p>Title</p>\n              <ion-input type=\"text\" formControlName=\"title\"></ion-input>\n            </ion-label>\n          </ion-item>\n          <div class=\"ion-padding-vertical container\">\n            <ion-label class=\"ion-padding-start\" color=\"medium\">\n              <small>Keywords</small>\n            </ion-label>\n            <div class=\"ion-padding-start\">\n              <ion-chip\n                color=\"primary\"\n                *ngFor=\"\n                  let keyword of form.get('keywords')?.value;\n                  let i = index\n                \"\n              >\n                {{ keyword }}\n                <ion-icon\n                  name=\"close-circle\"\n                  (click)=\"removeKeyword(i)\"\n                ></ion-icon>\n              </ion-chip>\n            </div>\n            <ion-item>\n              <ion-input\n                #inputKeyword\n                placeholder=\"add keyword\"\n                type=\"text\"\n              ></ion-input>\n              <ion-button\n                size=\"small\"\n                fill=\"outline\"\n                slot=\"end\"\n                (click)=\"\n                  addKeyword(inputKeyword.value);\n                  inputKeyword.value = ''\n                \"\n                >add</ion-button\n              >\n            </ion-item>\n          </div>\n          <ion-item>\n            <ion-label position=\"floating\">\n              <p>Content</p>\n            </ion-label>\n            <ion-textarea formControlName=\"content\" [autoGrow]=\"true\"></ion-textarea>\n          </ion-item>\n        </ion-list>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n<ion-footer>\n  <ion-toolbar>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"modalCtrl.dismiss(this.form.value, 'save')\">\n        save\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-footer>","import { Component, Inject } from \"@angular/core\";\nimport { ILoadingService } from \"@hexa/interfaces\";\nimport { getInjectionToken, TOKENS_NAME } from \"@hexa/token-injection\";\nimport { ModalController } from \"@ionic/angular\";\nimport { NoteModalComponent } from \"../../components/note-modal/note-modal.component\";\nimport { NoteInterface, NotesService } from \"../../services/notes.service\";\n\n@Component({\n  selector: \"hexa-notes-page\",\n  templateUrl: \"./notes-page.component.html\",\n  styleUrls: [\"./notes-page.component.scss\"]\n})\nexport class NotesPageComponent {\n\n  public readonly items$ = this._notesService.items$;\n\n  constructor(\n    private readonly _notesService: NotesService,\n    private readonly _modalCtrl: ModalController,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_LOADER_SERVICE)) private readonly _loaderService: ILoadingService,\n  ) {}\n\n  async ionViewDidEnter() {\n    this._loaderService.setStatus(true);\n    await this._notesService.getNotes();\n    this._loaderService.setStatus(false);\n  }\n\n  async actions(type: string, payload?: any) {\n    switch (type) {\n      case 'add': {\n        const { data, role } = await this._promptNewNote();\n        if (role !== 'save' || (!data?.title || !data?.content)) {\n          return;\n        }\n        this._loaderService.setStatus(true);\n        await this._notesService.createNote(\n          data.title,\n          data.content,\n        );\n        this._loaderService.setStatus(false);\n        break;\n      }\n      case 'edit': {\n        const { data, role } = await this._promptNewNote(payload);\n        console.log('data', data, payload);\n        if (role !== 'save' || (!data?.title || !data?.content)) {\n          return;\n        }\n        this._loaderService.setStatus(true);\n        await this._notesService.update(payload._id, data);\n        this._loaderService.setStatus(false);\n        break;\n      }\n      case 'delete':\n        await this._notesService.delete(payload?._id);\n        break;\n      case 'search': {\n        const {\n          detail: { value = null },\n        } = payload;\n        this._notesService.search(value);\n        break;\n      }\n    }\n  }\n\n  private async _promptNewNote(note?: NoteInterface) {\n    const modal = await this._modalCtrl.create({\n      component: NoteModalComponent,\n      componentProps: {\n        item: note,\n      }\n    });\n    await modal.present();\n    const { data, role } = await modal.onDidDismiss();\n    return { data, role };\n\n  }\n}","<ion-header collapse=\"fade\" mode=\"ios\">\n  <hexa-ui-header>\n    <ng-container slot=\"start\">\n      <ion-searchbar\n        enterkeyhint=\"search\"\n        inputmode=\"search\"\n        mode=\"ios\"\n        [debounce]=\"500\"\n        (ionChange)=\"actions(\n          'search',\n          $event\n        )\"></ion-searchbar>\n    </ng-container>\n    <ng-container slot=\"end\">\n      <ion-button (click)=\"actions('add')\">\n        Add Note\n      </ion-button>\n    </ng-container>\n  </hexa-ui-header>\n</ion-header>\n<ion-content \n    fullscreen\n    id=\"notes\" \n    class=\"ion-padding-horizontal\">\n  <ion-grid>\n    <ion-row class=\"ion-align-items-start\">\n      <!-- Wrapper -->\n      <ion-col size=\"12\" *ngIf=\"items$ | async as items; else skeletonHTML\">\n        <ion-grid class=\"header-grid\">\n          <ion-row class=\"ion-align-items-center ion-padding-bottom\">\n            <ion-col size=\"auto\" [ngStyle]=\"{ display: 'flex' }\">\n              <ion-label>\n                <span>My Notes</span>\n              </ion-label>\n            </ion-col>\n            <ion-col class=\"ion-no-padding\">\n              <span lines=\"none\" class=\"ion-float-end item-stats ion-text-end\">\n                <ion-label>\n                  <h2>{{ items.length }} Notes</h2>\n                </ion-label>\n              </span>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <div>\n          <ion-grid class=\"ion-no-padding\">\n            <ion-row \n                class=\"item ion-align-items-center ion-padding-horizontal\" \n                *ngFor=\"let item of items\" \n                (click)=\"actions('edit', item)\">\n              <ion-col \n                  size=\"12\"         \n                  class=\"ion-align-items-center ion-text-wrap pointer\"\n                  size=\"auto\">\n                <ion-text>\n                  <h2>{{ item.title }}</h2>\n                  <p>{{ item.content||'' }}...</p>\n                </ion-text>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </div>\n      </ion-col>\n      <!-- Skeleton loading HTML -->\n      <ng-template #skeletonHTML></ng-template>\n    </ion-row>\n  </ion-grid>\n</ion-content>","import { Route } from '@angular/router';\nimport { NotesPageComponent } from './containers/notes-page/notes-page.component';\n\nexport const notesRoutes: Route[] = [\n  {\n    path: '', \n    children: [\n      {\n        path: '',\n        component: NotesPageComponent\n      }\n    ]\n  }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@hexa/ui';\nimport { notesRoutes } from './lib.routes';\nimport { NotesPageComponent } from './containers/notes-page/notes-page.component';\nimport { NotesService } from './services/notes.service';\nimport { NoteModalComponent } from './components/note-modal/note-modal.component';\n\n\n@NgModule({\n  declarations: [\n    NotesPageComponent,\n    NoteModalComponent\n  ],\n  imports: [\n    CommonModule, \n    RouterModule.forChild(notesRoutes),\n    IonicModule,\n    ReactiveFormsModule,\n    UiModule,\n  ],\n  providers: [\n    NotesService\n  ],\n})\nexport class NotesModule {}\n","import { Inject, Injectable } from \"@angular/core\";\nimport { IDatastoreService, IEncryptionService } from \"@hexa/interfaces\";\nimport { getInjectionToken, TOKENS_NAME } from \"@hexa/token-injection\";\nimport { BehaviorSubject, combineLatest, filter, map } from \"rxjs\";\nimport { v4 as uuidV4 } from 'uuid';\n\nexport interface NoteInterface {\n  _id: string;\n  title: string;\n  content: string;\n  createdIsoDateTime: string;\n  lastModifiedIsoDateTime?: string;\n  keywords?: string[];\n}\n\nconst ROOT_DB_COLLECTION = 'd-notes';\n\n@Injectable()\nexport class NotesService {\n  private readonly _queryFilterBy$: BehaviorSubject<string | null> = new BehaviorSubject(null as any);\n  private readonly _items$: BehaviorSubject<NoteInterface[]> = new BehaviorSubject(\n    null as any\n  );\n  public readonly items$ = combineLatest([\n    this._items$.asObservable().pipe(filter(Boolean)),\n    this._queryFilterBy$.asObservable(),\n  ]).pipe(\n    map(([items, queryFilter]) =>\n      items?.filter((item) =>\n        queryFilter\n          ? item.title?.toLowerCase().includes(queryFilter.toLowerCase())\n          : true\n      )\n    )\n  );\n  public readonly allMedia$ = this._items$.asObservable();\n\n  constructor(\n    @Inject(getInjectionToken(TOKENS_NAME.APP_DATASTORE_SERVICE)) private readonly _datastoreService: IDatastoreService,\n    @Inject(getInjectionToken(TOKENS_NAME.APP_ENCRYPTION_SERVICE)) private readonly _encryptionService: IEncryptionService,\n  ) {}\n\n  async getNotes() {\n    const { notes = [] } = await this._datastoreService.getData(\n      ROOT_DB_COLLECTION, // collection\n      ['notes'], // key\n      { notes: [] } // default value to save if not exist (optional)\n    );\n    console.log('[INFO] notes: ', notes);\n    this._items$.next(notes);\n  }\n\n  async createNote(title: string, content: string) {\n    // run upload task\n    const isoDateTime = new Date().toISOString();\n    const note: NoteInterface = {\n      content,\n      title,\n      _id: uuidV4(),\n      createdIsoDateTime: isoDateTime,\n      lastModifiedIsoDateTime: isoDateTime,\n    };\n    const notes = [...this._items$.value];\n    notes.push(note);\n    // update object data to database\n    await this._datastoreService.saveData(\n      { notes },\n      ROOT_DB_COLLECTION,\n      ['notes']\n    );\n    // update state\n    this._items$.next(notes);\n  }\n\n  async delete(id: string) {\n    const notes = [...this._items$.value];\n    const index = notes.findIndex((item) => item._id === id);\n    // remove note from list\n    notes.splice(index, 1);\n    // update object data to database\n    await this._datastoreService.saveData(\n      { notes }, \n      ROOT_DB_COLLECTION,\n      ['notes']\n    );\n    // update state\n    this._items$.next(notes);\n  }\n\n  async update(id: string, data: Partial<NoteInterface>) {\n    const notes = [...this._items$.value];\n    const index = notes.findIndex((item) => item._id === id);\n    if (index === -1) {\n      throw new Error('Note not found');\n    }\n    // update note\n    notes[index] = {\n      ...notes[index],\n      ...data,\n      _id: id,\n      lastModifiedIsoDateTime: new Date().toISOString(),\n    };\n    // update object data to database\n    await this._datastoreService.saveData(\n      { notes },\n      ROOT_DB_COLLECTION,\n      ['notes']\n    );\n    // update state\n    this._items$.next(notes);    \n  }\n\n  search(name: string | null) {\n    this._queryFilterBy$.next(name);\n  }\n}"],"names":["FormArray","FormControl","FormGroup","ModalController","i0","NoteModalComponent","constructor","modalCtrl","title","content","createdIsoDateTime","Date","toISOString","lastModifiedIsoDateTime","keywords","item","_item","val","console","log","form","patchValue","get","clear","forEach","keyword","push","addKeyword","value","removeKeyword","index","removeAt","selectors","inputs","decls","vars","consts","template","ctx","getInjectionToken","TOKENS_NAME","NotesService","NotesPageComponent","_notesService","_modalCtrl","_loaderService","items$","ionViewDidEnter","setStatus","getNotes","actions","type","payload","data","role","_promptNewNote","createNote","update","_id","delete","detail","search","note","modal","create","component","componentProps","present","onDidDismiss","APP_LOADER_SERVICE","notesRoutes","path","children","CommonModule","RouterModule","IonicModule","ReactiveFormsModule","UiModule","NotesModule","imports","forChild","declarations","BehaviorSubject","combineLatest","filter","map","v4","uuidV4","ROOT_DB_COLLECTION","_datastoreService","_encryptionService","_items$","asObservable","pipe","Boolean","_queryFilterBy$","items","queryFilter","toLowerCase","includes","notes","getData","next","isoDateTime","saveData","id","findIndex","splice","Error","name","APP_DATASTORE_SERVICE","APP_ENCRYPTION_SERVICE","factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}